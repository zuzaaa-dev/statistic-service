// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/get-leaderboard/{period}/{count}": {
            "get": {
                "description": "Возвращает список топ-N самых активных участников за последние X дней, отсортированный по количеству завершенных задач.",
                "tags": [
                    "statistics"
                ],
                "summary": "Получить топ активных участников за указанный период",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Период в днях для определения активности (например, 7 для последней недели)",
                        "name": "period",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Количество записей в списке топа (например, 10 для топ-10)",
                        "name": "count",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список участников с их местом, ФИО и количеством завершенных задач",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.LeaderBoardStatistics"
                            }
                        }
                    },
                    "400": {
                        "description": "Описание ошибки в случае некорректного запроса",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/getStatistic/user/{user_id}": {
            "get": {
                "description": "Возвращает статистику задач для пользователя: завершенные и находящиеся в процессе задачи для каждой даты",
                "tags": [
                    "statistics"
                ],
                "summary": "Получить статистику пользователя по его ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ProfileResponseStatisticsDoc"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.LeaderBoardStatistics": {
            "type": "object",
            "properties": {
                "fio": {
                    "type": "string"
                },
                "place": {
                    "type": "integer"
                },
                "score": {
                    "type": "integer"
                }
            }
        },
        "handlers.ProfileResponseStatisticsDoc": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2024-10-26T00:00:00Z"
                },
                "in_progress_count": {
                    "type": "integer",
                    "example": 3
                },
                "success_count": {
                    "type": "integer",
                    "example": 5
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
